{"version":3,"sources":["logo.svg","Component/TicTacToe/TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","useState","turn","setTurn","Array","fill","cells","setCells","winner","setWinner","count","setCount","handleClick","num","squares","combos","across","down","diagonal","combo","forEach","pattern","checkForWinner","alert","handleRestart","Cell","onClick","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,kCCwHAA,EArHG,WACjB,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAASG,MAAM,GAAGC,KAAK,KAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACG,EAA0BR,mBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAqCGC,EAAc,SAACC,GACpB,GAAmB,KAAfP,EAAMO,GAAV,CAKA,IAAIC,EAAO,YAAOR,GAEL,IAAVE,EACOL,EAAQ,IAEM,MAATD,GACdY,EAAQD,GAAO,IACfV,EAAQ,OAGRW,EAAQD,GAAO,IACfV,EAAQ,MArDa,SAACW,GACvB,IAAIC,EAAS,CACZC,OAAQ,CACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,KAAM,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAERC,SAAU,CACT,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIT,IAAK,IAAIC,KAASJ,EACjBA,EAAOI,GAAOC,SAAQ,SAACC,GAEG,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KAIhBP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KACxCP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KAExCZ,EAAUK,EAAQO,EAAQ,QA0B7BC,CAAeR,GACfP,EAASO,GACHH,EAASD,EAAM,QApBpBa,MAAM,oBAuBFC,EAAgB,WACrBf,EAAU,IACVF,EAASH,MAAM,GAAGC,KAAK,KACjBM,EAAS,IAGVc,EAAO,SAAC,GAAa,IAAXZ,EAAU,EAAVA,IACf,OAAO,oBAAIa,QAAS,kBAAMd,EAAYC,IAA/B,SAAsCP,EAAMO,MAGpD,OACC,sBAAKc,UAAU,YAAf,UACU,sFACT,2CACQzB,EACP,kCACC,+BACC,cAACuB,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,OAEZ,+BACC,cAACY,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,OAEZ,+BACC,cAACY,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,IACX,cAACY,EAAD,CAAMZ,IAAK,aAIbL,GACA,qCACC,+BAAKA,EAAL,qBACA,wBAAQkB,QAAS,kBAAMF,KAAiBG,UAAY,QAApD,2BAIoB,GAATjB,GAAwB,KAAVF,GAA2B,KAAVA,GAC3B,qCACA,8CACA,wBAAQkB,QAAS,kBAAMF,KAAiBG,UAAY,QAApD,+BCtGLC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c90bf32f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport './TicTacToe.css';\r\n\r\nconst TicTacToe = () => {\r\n\tconst [turn, setTurn] = useState('x');\r\n\tconst [cells, setCells] = useState(Array(9).fill(''));\r\n\tconst [winner, setWinner] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\tconst checkForWinner = (squares) => {\r\n\t\tlet combos = {\r\n\t\t\tacross: [\r\n\t\t\t\t[0, 1, 2],\r\n\t\t\t\t[3, 4, 5],\r\n\t\t\t\t[6, 7, 8],\r\n\t\t\t],\r\n\t\t\tdown: [\r\n\t\t\t\t[0, 3, 6],\r\n\t\t\t\t[1, 4, 7],\r\n\t\t\t\t[2, 5, 8],\r\n\t\t\t],\r\n\t\t\tdiagonal: [\r\n\t\t\t\t[0, 4, 8],\r\n\t\t\t\t[2, 4, 6],\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\tfor (let combo in combos) {\r\n\t\t\tcombos[combo].forEach((pattern) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tsquares[pattern[0]] === '' ||\r\n\t\t\t\t\tsquares[pattern[1]] === '' ||\r\n\t\t\t\t\tsquares[pattern[2]] === ''\r\n\t\t\t\t) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tsquares[pattern[0]] === squares[pattern[1]] &&\r\n\t\t\t\t\tsquares[pattern[1]] === squares[pattern[2]]\r\n\t\t\t\t) {\r\n\t\t\t\t\tsetWinner(squares[pattern[0]]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (num) => {\r\n\t\tif (cells[num] !== '') {\r\n\t\t\talert('already clicked');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet squares = [...cells];\r\n\r\n\t\tif(winner != ''){\r\n            setTurn('');\r\n        } \r\n        else if (turn === 'X') {\r\n\t\t\tsquares[num] = 'X';\r\n\t\t\tsetTurn('O');\r\n\t\t}\r\n        else{\r\n\t\t\tsquares[num] = 'O';\r\n\t\t\tsetTurn('X');\r\n\t\t}\r\n\r\n\t\tcheckForWinner(squares);\r\n\t\tsetCells(squares);\r\n        setCount(count+1);\r\n\t};\r\n\r\n\tconst handleRestart = () => {\r\n\t\tsetWinner('');\r\n\t\tsetCells(Array(9).fill(''));\r\n        setCount(0);\r\n\t};\r\n\r\n\tconst Cell = ({ num }) => {\r\n\t\treturn <td onClick={() => handleClick(num)}>{cells[num]}</td>;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n            <h2>जीरो काटा :D</h2>\r\n\t\t\t<table>\r\n\t\t\t\tTurn: {turn}\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={0} />\r\n\t\t\t\t\t\t<Cell num={1} />\r\n\t\t\t\t\t\t<Cell num={2} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={3} />\r\n\t\t\t\t\t\t<Cell num={4} />\r\n\t\t\t\t\t\t<Cell num={5} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<Cell num={6} />\r\n\t\t\t\t\t\t<Cell num={7} />\r\n\t\t\t\t\t\t<Cell num={8} />\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t{winner && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h2>{winner} is the winner!</h2>\r\n\t\t\t\t\t<button onClick={() => handleRestart()} className = \"btnya\">Play Again</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n            {\r\n                count == 9 && winner != 'O' && winner != 'X' && (\r\n                    <>\r\n                    <h2> It's a Draw</h2>\r\n                    <button onClick={() => handleRestart()} className = \"btnya\">Play Again</button>\r\n                    </>\r\n                )\r\n            }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TicTacToe;","import logo from './logo.svg';\nimport './App.css';\nimport TicTacToe from './Component/TicTacToe/TicTacToe';\n\nfunction App() {\n  return (\n    <TicTacToe />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}